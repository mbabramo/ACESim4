using ACESimBase.GameSolvingSupport;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ACESimBase.GameSolvingAlgorithms.ECTAAlgorithm
{
	public class ECTANode<T> where T : MaybeExact<T>, new()
	{
		public bool terminal; // 0: decision node / 1: terminal node
		public int iset = -1; // which information set
		public int father = -1; // node closer to root
		public int moveAtFather = -1; // move of edge from father
		public int outcome = -1; // which outcome
		/* will be generated by  genseqin()                                 */
		/// <summary>
		/// The sequence for each player, defined as the last move to the node for each player. The indices are indices of all the moves, not just the player's own moves.
		/// </summary>
		public int[] sequenceForPlayer = new int[] { 0, 0, 0 }; // sequence defined by the last move for each player (or 0)
	}
}
