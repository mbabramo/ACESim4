using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ACESimBase.GameSolvingSupport.ECTAAlgorithm
{
	public class node
	{
		public bool terminal; // 0: decision node / 1: terminal node
		public iset iset; // which information set
		public node father; // node closer to root
		public move reachedby; // move of edge from father
		public outcome outcome; // which outcome
		/* will be generated by  genseqin()                                 */
		public move[] defseq = new move[] { new move(), new move(), new move() }; // seq defd by node for each player

		public int isetIndex(iset[] isets) => isets.Select((item, index) => (item, index)).First(x => x.item == iset).index;
		public int fatherIndex(node[] nodes) => nodes.Select((item, index) => (item, index)).First(x => x.item == father).index;
		public int reachedByIndex(move[] moves) => moves.Select((item, index) => (item, index)).First(x => x.item == reachedby).index;
		public int outcomeIndex(outcome[] outcomes) => outcomes.Select((item, index) => (item, index)).First(x => x.item == outcome).index;
	}
}
