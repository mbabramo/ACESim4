<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ACESimMultiple>
  <singleSettingsFile filename="LitigationGameSingleRunSettings.xml">

    <defineVariableAlternatives>
      <!--<defineVariableAlternative name="aggressiveness equilibrium">

        <defineVariable findString="$BargainingAggressivenessOverrideSetting" replaceString="Symmetric"/>
        <defineVariable findString="$LoserPaysRule" replaceString="true"/>
        <defineVariable findString="$BargainingAggressivenessFindEquilibriumUseComplexMethod" replaceString="false"/>
        <defineVariable findString="$BargainingAggressivenessFindEquilibriumUseSimpleMethod" replaceString="false"/>
        <defineVariable findString="$BargainingAggressivenessFindEquilibriumSimpleMethodRepetitions" replaceString="20"/>

        <defineVariable findString="$PNoiseLevelMin" replaceString="0.04" />
        <defineVariable findString="$PNoiseLevelMax" replaceString="0.04" />
        <defineVariable findString="$DNoiseLevelMin" replaceString="0.04" />
        <defineVariable findString="$DNoiseLevelMax" replaceString="0.04" />
      </defineVariableAlternative>-->

      <!--<defineVariableAlternative name="selflessPlayers">
        <defineVariable findString="$BargainingModule" replaceString="FairBargaining"/>
        <defineVariable findString="$PNoiseLevelMin" replaceString="0.1" />
        <defineVariable findString="$PNoiseLevelMax" replaceString="0.1" />
        <defineVariable findString="$DNoiseLevelMin" replaceString="0.1" />
        <defineVariable findString="$DNoiseLevelMax" replaceString="0.1" />
        <defineVariable findString="$PlayersActToMaximizeSocialWelfare" replaceString="true"/>
        <defineVariable findString="$RepetitionsOfEntireSmoothingProcess" replaceString="1" />
        <defineVariable findString="$BargainingAggressivenessOverrideSetting" replaceString="No"/>
        <defineVariable findString="$BargainingAggressivenessFindEquilibriumUseComplexMethod" replaceString="false"/>
        <defineVariable findString="$BargainingAggressivenessFindEquilibriumUseSimpleMethod" replaceString="true"/>
        <defineVariable findString="$BargainingAggressivenessFindEquilibriumSimpleMethodRepetitions" replaceString="2"/>
        <defineVariable findString="$ConsiderTasteForFairness" replaceString="false" />
        <defineVariable findString="$TasteForFairnessOnlySelfRegarding" replaceString="true" />
        <defineVariable findString="$PTasteForFairnessMin" replaceString="0.0" />
        <defineVariable findString="$PTasteForFairnessMax" replaceString="0.0" />
        <defineVariable findString="$DTasteForFairnessMin" replaceString="0.0" />
        <defineVariable findString="$DTasteForFairnessMax" replaceString="0.0" />
        <defineVariable findString="$PTasteForSettlementMin" replaceString="0.0" />
        <defineVariable findString="$PTasteForSettlementMax" replaceString="0.0" />
        <defineVariable findString="$DTasteForSettlementMin" replaceString="0.0" />
        <defineVariable findString="$DTasteForSettlementMax" replaceString="0.0" />
      </defineVariableAlternative>-->

      <defineVariableAlternative name="loserpays">
        <defineVariable findString="$LoserPaysRule" replaceString="false"/>
        <defineVariable findString="$BargainingAggressivenessOverrideSetting" replaceString="Yes"/>
        <defineVariable findString="$BargainingAggressivenessFindEquilibriumUseComplexMethod" replaceString="false"/>
        <defineVariable findString="$BargainingAggressivenessFindEquilibriumUseSimpleMethod" replaceString="true"/>
        <defineVariable findString="$BargainingAggressivenessFindEquilibriumSimpleMethodRepetitions" replaceString="2"/>
        <defineVariable findString="$ConsiderTasteForFairness" replaceString="false" />
        <defineVariable findString="$TasteForFairnessOnlySelfRegarding" replaceString="true" />
        <defineVariable findString="$PTasteForFairnessMin" replaceString="0.0" />
        <defineVariable findString="$PTasteForFairnessMax" replaceString="0.0" />
        <defineVariable findString="$DTasteForFairnessMin" replaceString="0.0" />
        <defineVariable findString="$DTasteForFairnessMax" replaceString="0.0" />
        <defineVariable findString="$PTasteForSettlementMin" replaceString="0.0" />
        <defineVariable findString="$PTasteForSettlementMax" replaceString="1.0" />
        <defineVariable findString="$DTasteForSettlementMin" replaceString="0.0" />
        <defineVariable findString="$DTasteForSettlementMax" replaceString="1.0" />
      </defineVariableAlternative>


      <defineVariableAlternative name="sidebet 0.25">
        <defineVariable findString="$LitigationCostModule" replaceString="LitigationCostShootout"/>
        <defineVariable findString="$SpecificLitigationCostSettings" replaceString="LitigationCostShootoutModule"/>
        <defineVariable findString="$DiscountFactorForShootouts" replaceString="1.0"/>
        <defineVariable findString="$MultiplierForShootouts" replaceString="0.25"/>
        <defineVariable findString="$EnforceWhenCaseDroppedImmediatelyAfterward" replaceString="false"/>
        <defineVariable findString="$RepetitionsOfEntireSmoothingProcess" replaceString="1" />
        <defineVariable findString="$BargainingAggressivenessOverrideSetting" replaceString="Yes"/>
        <defineVariable findString="$BargainingAggressivenessFindEquilibriumUseComplexMethod" replaceString="false"/>
        <defineVariable findString="$BargainingAggressivenessFindEquilibriumUseSimpleMethod" replaceString="true"/>
        <defineVariable findString="$BargainingAggressivenessFindEquilibriumSimpleMethodRepetitions" replaceString="2"/>
        <defineVariable findString="$ConsiderTasteForFairness" replaceString="false" />
        <defineVariable findString="$TasteForFairnessOnlySelfRegarding" replaceString="true" />
        <defineVariable findString="$PTasteForFairnessMin" replaceString="0.0" />
        <defineVariable findString="$PTasteForFairnessMax" replaceString="0.0" />
        <defineVariable findString="$DTasteForFairnessMin" replaceString="0.0" />
        <defineVariable findString="$DTasteForFairnessMax" replaceString="0.0" />
        <defineVariable findString="$PTasteForSettlementMin" replaceString="0.0" />
        <defineVariable findString="$PTasteForSettlementMax" replaceString="1.0" />
        <defineVariable findString="$DTasteForSettlementMin" replaceString="0.0" />
        <defineVariable findString="$DTasteForSettlementMax" replaceString="1.0" />
      </defineVariableAlternative>



      <defineVariableAlternative name="sidebet 0.5">
        <defineVariable findString="$LitigationCostModule" replaceString="LitigationCostShootout"/>
        <defineVariable findString="$SpecificLitigationCostSettings" replaceString="LitigationCostShootoutModule"/>
        <defineVariable findString="$DiscountFactorForShootouts" replaceString="1.0"/>
        <defineVariable findString="$MultiplierForShootouts" replaceString="0.5"/>
        <defineVariable findString="$EnforceWhenCaseDroppedImmediatelyAfterward" replaceString="false"/>
        <defineVariable findString="$RepetitionsOfEntireSmoothingProcess" replaceString="1" />
        <defineVariable findString="$BargainingAggressivenessOverrideSetting" replaceString="Yes"/>
        <defineVariable findString="$BargainingAggressivenessFindEquilibriumUseComplexMethod" replaceString="false"/>
        <defineVariable findString="$BargainingAggressivenessFindEquilibriumUseSimpleMethod" replaceString="true"/>
        <defineVariable findString="$BargainingAggressivenessFindEquilibriumSimpleMethodRepetitions" replaceString="2"/>
        <defineVariable findString="$ConsiderTasteForFairness" replaceString="false" />
        <defineVariable findString="$TasteForFairnessOnlySelfRegarding" replaceString="true" />
        <defineVariable findString="$PTasteForFairnessMin" replaceString="0.0" />
        <defineVariable findString="$PTasteForFairnessMax" replaceString="0.0" />
        <defineVariable findString="$DTasteForFairnessMin" replaceString="0.0" />
        <defineVariable findString="$DTasteForFairnessMax" replaceString="0.0" />
        <defineVariable findString="$PTasteForSettlementMin" replaceString="0.0" />
        <defineVariable findString="$PTasteForSettlementMax" replaceString="1.0" />
        <defineVariable findString="$DTasteForSettlementMin" replaceString="0.0" />
        <defineVariable findString="$DTasteForSettlementMax" replaceString="1.0" />
      </defineVariableAlternative>


      <defineVariableAlternative name="sidebet 0.75">
        <defineVariable findString="$LitigationCostModule" replaceString="LitigationCostShootout"/>
        <defineVariable findString="$SpecificLitigationCostSettings" replaceString="LitigationCostShootoutModule"/>
        <defineVariable findString="$DiscountFactorForShootouts" replaceString="1.0"/>
        <defineVariable findString="$MultiplierForShootouts" replaceString="0.75"/>
        <defineVariable findString="$EnforceWhenCaseDroppedImmediatelyAfterward" replaceString="false"/>
        <defineVariable findString="$RepetitionsOfEntireSmoothingProcess" replaceString="1" />
        <defineVariable findString="$BargainingAggressivenessOverrideSetting" replaceString="Yes"/>
        <defineVariable findString="$BargainingAggressivenessFindEquilibriumUseComplexMethod" replaceString="false"/>
        <defineVariable findString="$BargainingAggressivenessFindEquilibriumUseSimpleMethod" replaceString="true"/>
        <defineVariable findString="$BargainingAggressivenessFindEquilibriumSimpleMethodRepetitions" replaceString="2"/>
        <defineVariable findString="$ConsiderTasteForFairness" replaceString="false" />
        <defineVariable findString="$TasteForFairnessOnlySelfRegarding" replaceString="true" />
        <defineVariable findString="$PTasteForFairnessMin" replaceString="0.0" />
        <defineVariable findString="$PTasteForFairnessMax" replaceString="0.0" />
        <defineVariable findString="$DTasteForFairnessMin" replaceString="0.0" />
        <defineVariable findString="$DTasteForFairnessMax" replaceString="0.0" />
        <defineVariable findString="$PTasteForSettlementMin" replaceString="0.0" />
        <defineVariable findString="$PTasteForSettlementMax" replaceString="1.0" />
        <defineVariable findString="$DTasteForSettlementMin" replaceString="0.0" />
        <defineVariable findString="$DTasteForSettlementMax" replaceString="1.0" />
      </defineVariableAlternative>

      <defineVariableAlternative name="nosidebet">
        <defineVariable findString="$RepetitionsOfEntireSmoothingProcess" replaceString="1" />
        <defineVariable findString="$BargainingAggressivenessOverrideSetting" replaceString="Yes"/>
        <defineVariable findString="$BargainingAggressivenessFindEquilibriumUseComplexMethod" replaceString="false"/>
        <defineVariable findString="$BargainingAggressivenessFindEquilibriumUseSimpleMethod" replaceString="true"/>
        <defineVariable findString="$BargainingAggressivenessFindEquilibriumSimpleMethodRepetitions" replaceString="2"/>
        <defineVariable findString="$ConsiderTasteForFairness" replaceString="false" />
        <defineVariable findString="$TasteForFairnessOnlySelfRegarding" replaceString="true" />
        <defineVariable findString="$PTasteForFairnessMin" replaceString="0.0" />
        <defineVariable findString="$PTasteForFairnessMax" replaceString="0.0" />
        <defineVariable findString="$DTasteForFairnessMin" replaceString="0.0" />
        <defineVariable findString="$DTasteForFairnessMax" replaceString="0.0" />
        <defineVariable findString="$PTasteForSettlementMin" replaceString="0.0" />
        <defineVariable findString="$PTasteForSettlementMax" replaceString="1.0" />
        <defineVariable findString="$DTasteForSettlementMin" replaceString="0.0" />
        <defineVariable findString="$DTasteForSettlementMax" replaceString="1.0" />
      </defineVariableAlternative>

      <!--<defineVariableAlternative name="endogenous effort">
        <defineVariable findString="$CaseResolvedBasedOnExogenouslySpecifiedProbability" replaceString="true"/>
        <defineVariable findString="$MinSmoothingPoints" replaceString="200" />
        <defineVariable findString="$MaxSmoothingPoints" replaceString="200" />
        <defineVariable findString="$MinIterations" replaceString="20,000" />
        <defineVariable findString="$MaxIterations" replaceString="20,000" />
        <defineVariable findString="$LitigationCostModule" replaceString="LitigationCostEndogenousEffort"/>
        <defineVariable findString="$SpecificLitigationCostSettings" replaceString="LitigationCostEndogenousEffortModule"/>  Also should set repetitions to > 1 
        <defineVariable findString="$ExploreEndogenousEffortInvestigationEquilibria" replaceString="false"/>
        <defineVariable findString="$ExploreEndogenousEffortTrialEquilibria" replaceString="true"/>
        <defineVariable findString="$EndogenousEffortEquilibriumUsesSimpleMethod" replaceString="true"/>
        <defineVariable findString="$EndogenousEffortEquilibriumSimpleMethodRepetitions" replaceString="20"/>
        <defineVariable findString="$CommonLitigationExpensesIfTrialMin" replaceString="150.0"/>
        <defineVariable findString="$CommonLitigationExpensesIfTrialMax" replaceString="150.0"/>
        <defineVariable findString="$PAdditionalLitigationExpensesIfTrialMin" replaceString="0.0"/>
        <defineVariable findString="$PAdditionalLitigationExpensesIfTrialMax" replaceString="0.0"/>
        <defineVariable findString="$DAdditionalLitigationExpensesIfTrialMin" replaceString="0.0"/>
        <defineVariable findString="$DAdditionalLitigationExpensesIfTrialMax" replaceString="0.0"/>
        <defineVariable findString="$PInvestigationExpensesIfDispute" replaceString="0.0"/>
        <defineVariable findString="$DInvestigationExpensesIfDispute" replaceString="0.0"/>
        <defineVariable findString="$PMarginalInvestigationExpensesPerBargainingRound" replaceString="0.0"/>
        <defineVariable findString="$DMarginalInvestigationExpensesPerBargainingRound" replaceString="0.0"/>
        <defineVariable findString="$PSettlementFailureCostPerBargainingRound" replaceString="10.0"/>
        <defineVariable findString="$DSettlementFailureCostPerBargainingRound" replaceString="10.0"/>
      </defineVariableAlternative>-->

      <!--<defineVariableAlternative name="ContinuousPrecaution always trial">

        -->
      <!--<defineVariable findString="$BargainingModule" replaceString="NoBargainingBargaining" />-->
      <!--
        -->
      <!--<defineVariable findString="$BeginningDropOrDefaultModule" replaceString="NeverGiveUp"/>-->
      <!--
        <defineVariable findString="$RepetitionsOfEntireSmoothingProcess" replaceString="1" />
        <defineVariable findString="$LoserPaysRule" replaceString="false"/>
        <defineVariable findString="$PMinPortionOfPerceivedBargainingRangeToInsistOnMin" replaceString="0.00" />
        <defineVariable findString="$DMinPortionOfPerceivedBargainingRangeToInsistOnMin" replaceString="0.70" />
        <defineVariable findString="$PMinPortionOfPerceivedBargainingRangeToInsistOnMax" replaceString="0.00" />
        <defineVariable findString="$DMinPortionOfPerceivedBargainingRangeToInsistOnMax" replaceString="0.70" />
        <defineVariable findString="$RiskSelection" replaceString="BothPartiesRiskNeutral" />
        <defineVariable findString="$DisputeGeneratorModule" replaceString="ContinuousPrecautionDisputeGenerator" />
        <defineVariable findString="$OnlyOneRepetitionNeeded" replaceString="false" />
        <defineVariable findString="$UndetectedCasesForEachDetectedCase" replaceString="5.0" />
      </defineVariableAlternative>-->
      <!--<defineVariableAlternative name="tasteForFairness">
        -->
      <!--<defineVariable findString="$SmoothingOptionSet" replaceString="RPROPSmoothingOptionsFast" />-->
      <!--
        <defineVariable findString="$MinSmoothingPoints" replaceString="200" />
        <defineVariable findString="$MaxSmoothingPoints" replaceString="200" />
        <defineVariable findString="$MinIterations" replaceString="20,000" />
        <defineVariable findString="$MaxIterations" replaceString="50,000" />
        <defineVariable findString="$BargainingAggressivenessOverrideSetting" replaceString="Yes"/>
        <defineVariable findString="$BargainingAggressivenessFindEquilibriumUseComplexMethod" replaceString="false"/>
        <defineVariable findString="$BargainingAggressivenessFindEquilibriumUseSimpleMethod" replaceString="true"/>
        <defineVariable findString="$BargainingAggressivenessFindEquilibriumSimpleMethodRepetitions" replaceString="2"/>
        <defineVariable findString="$WeightToPlaceOnPerceivedMiddleOfBargainingRangesWhenBargainIsReached" replaceString="0.0" />

        -->
      <!--<defineVariable findString="$ConsiderTasteForFairness" replaceString="false" />
        <defineVariable findString="$TasteForFairnessOnlySelfRegarding" replaceString="true" />
        <defineVariable findString="$PTasteForFairnessMin" replaceString="0.0" />
        <defineVariable findString="$PTasteForFairnessMax" replaceString="0.0" />
        <defineVariable findString="$DTasteForFairnessMin" replaceString="0.0" />
        <defineVariable findString="$DTasteForFairnessMax" replaceString="0.0" />
        <defineVariable findString="$PTasteForSettlementMin" replaceString="0.0" />
        <defineVariable findString="$PTasteForSettlementMax" replaceString="1.0" />
        <defineVariable findString="$DTasteForSettlementMin" replaceString="0.0" />
        <defineVariable findString="$DTasteForSettlementMax" replaceString="1.0" />-->
      <!--
        
        -->
      <!--<defineVariable findString="$RiskSelection" replaceString="HeterogeneousRiskAversion" />
        
    <defineVariable findString="$FullInformationAboutUtilityFunctions" replaceString="false" />
        <defineVariable findString="$PRiskAversionRParameterValueMin" replaceString="0.5" />
        <defineVariable findString="$PRiskAversionRParameterValueMax" replaceString="1.0" />
        <defineVariable findString="$DRiskAversionRParameterValueMin" replaceString="0.5" />
        <defineVariable findString="$DRiskAversionRParameterValueMax" replaceString="1.0" />-->
      <!--
        <defineVariable findString="$FirstOrderOptimizedBargainingDecisions" replaceString="false" />
        <defineVariable findString="$HigherOrderOptimizedBargainingDecisions" replaceString="false" />
    </defineVariableAlternative>-->

    </defineVariableAlternatives>
  </singleSettingsFile>
</ACESimMultiple>