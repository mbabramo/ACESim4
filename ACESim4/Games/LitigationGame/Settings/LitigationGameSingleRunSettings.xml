<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ACESim>
  <parentSettingsFile filename="LitigationGameModuleSelector.xml">
    
    <!--DISPUTE GENERATOR-->
    
    <!--<defineVariable findString="$DisputeGeneratorModule" replaceString="ContinuousPrecautionDisputeGenerator" />-->
    <!--<defineVariable findString="$DisputeGeneratorModule" replaceString="NegligenceDisputeGenerator" />-->
    <defineVariable findString="$NegligenceInputs" replaceString="NegligenceInputs"/>
    <!--<defineVariable findString="$NegligenceInputs" replaceString="StrictLiabilityInputs"/>-->
    <defineVariable findString="$UndetectedCasesForEachDetectedCaseMax" replaceString="10.0" />
    <defineVariable findString="$OnlyOneRepetitionNeeded" replaceString="false" /> <!--must keep evolving with other decisions--> <!--should also increase repetitions below-->
    
    <!--<defineVariable findString="$DisputeGeneratorModule" replaceString="ForbiddenActDisputeGenerator" />
    <defineVariable findString="$ForbiddenActInputs" replaceString="ForbiddenActInputs"/>-->
    
    <defineVariable findString="$DisputeGeneratorModule" replaceString="ExogenousDisputeGenerator" />
    <defineVariable findString="$ExogenousDisputeGeneratorInputsSpecific" replaceString="" />
    <!--<defineVariable findString="$ExogenousDisputeGeneratorInputsSpecific" replaceString="ExogenouslySpecifiedProbabilityCorrect" />-->
    <!--<defineVariable findString="$ExogenousDisputeGeneratorInputsSpecific" replaceString="WeakPCases" />-->
    <!--<defineVariable findString="$ExogenousDisputeGeneratorInputsSpecific" replaceString="CloseCases" />-->
    <defineVariable findString="$ExogenousDamagesMin" replaceString="1000" />
    <defineVariable findString="$ExogenousDamagesMax" replaceString="1000" />
    <defineVariable findString="$OnlyOneRepetitionNeeded" replaceString="false" />

    <!-- FORECASTING -->

    <defineVariable findString="$ProbabilityForecastingModule" replaceString="IndependentEstimatesModule" />
    <!--<defineVariable findString="$ProbabilityForecastingModule" replaceString="SeparateEstimatesModule" />-->
    <!--<defineVariable findString="$ProbabilityForecastingModule" replaceString="PerfectEstimatesModule" />--> 

    <!--<defineVariable findString="$DamagesForecastingModule" replaceString="IndependentEstimatesModule" />-->
    <!--<defineVariable findString="$DamagesForecastingModule" replaceString="SeparateEstimatesModule" />-->
    <defineVariable findString="$DamagesForecastingModule" replaceString="PerfectEstimatesModule" />
    
    <defineVariable findString="$BiasAffectingEntireLegalSystemMean" replaceString="0.0" /> <!--Must be zero because otherwise plaintiff and defendant take it into account structurally, and then again-->
    <defineVariable findString="$BiasAffectingEntireLegalSystemStdev" replaceString="0.0" />
    <defineVariable findString="$BiasAffectingPlaintiffMean" replaceString="0.0" />
    <defineVariable findString="$BiasAffectingPlaintiffStdev" replaceString="0.0" />
    <defineVariable findString="$BiasAffectingDefendantMean" replaceString="0.0" />
    <defineVariable findString="$BiasAffectingDefendantStdev" replaceString="0.0" />
    <defineVariable findString="$BiasAffectingJudgeMean" replaceString="0.0" />
    <defineVariable findString="$BiasAffectingJudgeStdev" replaceString="0.0" />

    <defineVariable findString="$PNoiseLevelMin" replaceString="0.05" />
    <defineVariable findString="$PNoiseLevelMax" replaceString="0.05" />
    <defineVariable findString="$DNoiseInEstimatingPNoiseLevel" replaceString="0.0" />
    <defineVariable findString="$DNoiseLevelMin" replaceString="0.05" />
    <defineVariable findString="$DNoiseLevelMax" replaceString="0.05" />
    <defineVariable findString="$PNoiseInEstimatingDNoiseLevel" replaceString="0.0" />

    <!-- LITIGATION COST (INCLUDING FEE-SHIFTING, EXPENSE LEVELS, EFFORT LEVELS) -->

    <!--<defineVariable findString="$LitigationCostModule" replaceString="LitigationCostEndogenousEffort"/>
    <defineVariable findString="$SpecificLitigationCostSettings" replaceString="LitigationCostEndogenousEffortModule"/>
    <defineVariable findString="$OptimizeInvestigationIntensity" replaceString="true"/>
    <defineVariable findString="$OptimizeTrialPrep" replaceString="true"/>
    <defineVariable findString="$ExploreEndogenousEffortInvestigationEquilibria" replaceString="false"/>
    <defineVariable findString="$ExploreEndogenousEffortTrialEquilibria" replaceString="false"/>
    <defineVariable findString="$EndogenousEffortEquilibriumUsesSimpleMethod" replaceString="false"/>
    <defineVariable findString="$EndogenousEffortEquilibriumSimpleMethodRepetitions" replaceString="3"/>
    <defineVariable findString="$CommonTrialExpensesMin" replaceString="100.0"/>
    <defineVariable findString="$CommonTrialExpensesMax" replaceString="100.0"/>
    <defineVariable findString="$PAdditionalTrialExpensesMin" replaceString="0.0"/>
    <defineVariable findString="$PAdditionalTrialExpensesMax" replaceString="0.0"/>
    <defineVariable findString="$DAdditionalTrialExpensesMin" replaceString="0.0"/>
    <defineVariable findString="$DAdditionalTrialExpensesMax" replaceString="0.0"/>
    <defineVariable findString="$PInvestigationExpensesIfDispute" replaceString="0.0"/>
    <defineVariable findString="$DInvestigationExpensesIfDispute" replaceString="0.0"/>
    <defineVariable findString="$PMarginalInvestigationExpensesAfterEachMiddleBargainingRound" replaceString="0.0"/>
    <defineVariable findString="$DMarginalInvestigationExpensesAfterEachMiddleBargainingRound" replaceString="0.0"/>
    <defineVariable findString="$PMarginalInvestigationExpensesAfterFirstBargainingRound" replaceString="0.0"/>
    <defineVariable findString="$DMarginalInvestigationExpensesAfterFirstBargainingRound" replaceString="0.0"/>
    <defineVariable findString="$PMarginalInvestigationExpensesAfterLastBargainingRound" replaceString="0.0"/>
    <defineVariable findString="$DMarginalInvestigationExpensesAfterLastBargainingRound" replaceString="0.0"/>
    <defineVariable findString="$PMarginalInvestigationExpensesAfterFirstBargainingRound" replaceString="50.0"/> 
    <defineVariable findString="$DMarginalInvestigationExpensesAfterFirstBargainingRound" replaceString="50.0"/>
    <defineVariable findString="$PMarginalInvestigationExpensesAfterLastBargainingRound" replaceString="50.0"/> 
    <defineVariable findString="$DMarginalInvestigationExpensesAfterLastBargainingRound" replaceString="50.0"/>
    <defineVariable findString="$PSettlementFailureCostPerBargainingRound" replaceString="0.0"/>
    <defineVariable findString="$DSettlementFailureCostPerBargainingRound" replaceString="0.0"/>-->
    

    <defineVariable findString="$LitigationCostModule" replaceString="LitigationCostStandard"/>
    <defineVariable findString="$SpecificLitigationCostSettings" replaceString="LitigationCostStandardModule"/>
    <defineVariable findString="$CommonTrialExpensesMin" replaceString="150.0"/> 
    <defineVariable findString="$CommonTrialExpensesMax" replaceString="150.0"/>
    <defineVariable findString="$PAdditionalTrialExpensesMin" replaceString="50.0"/>
    <defineVariable findString="$PAdditionalTrialExpensesMax" replaceString="50.0"/>
    <defineVariable findString="$DAdditionalTrialExpensesMin" replaceString="50.0"/> 
    <defineVariable findString="$DAdditionalTrialExpensesMax" replaceString="50.0"/>
    <defineVariable findString="$PInvestigationExpensesIfDispute" replaceString="0.0"/>
    <defineVariable findString="$DInvestigationExpensesIfDispute" replaceString="0.0"/>
    <defineVariable findString="$PMarginalInvestigationExpensesAfterEachMiddleBargainingRound" replaceString="50.0"/> 
    <defineVariable findString="$DMarginalInvestigationExpensesAfterEachMiddleBargainingRound" replaceString="50.0"/>
    <defineVariable findString="$PMarginalInvestigationExpensesAfterFirstBargainingRound" replaceString="50.0"/> 
    <defineVariable findString="$DMarginalInvestigationExpensesAfterFirstBargainingRound" replaceString="50.0"/>
    <defineVariable findString="$PMarginalInvestigationExpensesAfterLastBargainingRound" replaceString="50.0"/> 
    <defineVariable findString="$DMarginalInvestigationExpensesAfterLastBargainingRound" replaceString="50.0"/>
    <defineVariable findString="$PSettlementFailureCostPerBargainingRound" replaceString="0.0"/>
    <defineVariable findString="$DSettlementFailureCostPerBargainingRound" replaceString="0.0"/>
    <defineVariable findString="$TrialTaxEachParty" replaceString="0.0"/>
    <defineVariable findString="$TrialTaxLoser" replaceString="0.0"/>
    <defineVariable findString="$TrialTaxDLoser" replaceString="0.0"/>
    

    <!--<defineVariable findString="$LitigationCostModule" replaceString="LitigationCostStandard"/>
    <defineVariable findString="$SpecificLitigationCostSettings" replaceString="LitigationCostlessStandardModule" />-->
    
    <defineVariable findString="$LoserPaysRule" replaceString="false"/>
    <defineVariable findString="$PlaintiffMustPayDamagesIfItLoses" replaceString="false"/>
    <defineVariable findString="$LimitLoserPaysToOwnExpenses" replaceString="false"/>
    <defineVariable findString="$MinimumMarginOfVictoryForLoserPays" replaceString="0.0"/>
    <defineVariable findString="$ApplyLoserPaysWhenCasesAbandoned" replaceString="false"/>
    <defineVariable findString="$ApplyLoserPaysToSettlementsForLessThanThisProportionOfDamages" replaceString="-1.0"/>
    <defineVariable findString="$LoserPaysMultiple" replaceString="1.0"/>
    <defineVariable findString="$PartiesInformationImprovesOverTime" replaceString="true"/> 
    <defineVariable findString="$IncludeCombinationDecisions" replaceString="false" />
    <defineVariable findString="$NoiseLevelOfPlaintiffFirstIndependentInformation" replaceString="0.3"/>
    <defineVariable findString="$NoiseLevelOfDefendantFirstIndependentInformation" replaceString="0.3"/>
    <defineVariable findString="$NoiseLevelOfPlaintiffIndependentInformation" replaceString="0.3"/>
    <defineVariable findString="$NoiseLevelOfDefendantIndependentInformation" replaceString="0.3"/>
    <defineVariable findString="$UseContingencyFees" replaceString="false"/>
    <defineVariable findString="$ContingencyFeeRate" replaceString="0.30"/>

    <!-- RISK -->

    <defineVariable findString="$RiskSelection" replaceString="BothPartiesRiskNeutral" />
    <defineVariable findString="$FullInformationAboutUtilityFunctions" replaceString="true" />
    <!--<defineVariable findString="$RiskSelection" replaceString="BothPartiesRiskAverse" />
    <defineVariable findString="$RiskAversionLevel" replaceString="8.0" />-->
    <!--<defineVariable findString="$FullInformationAboutUtilityFunctions" replaceString="true" />-->
    <!--<defineVariable findString="$RiskSelection" replaceString="HeterogeneousRiskAversion" />
    <defineVariable findString="$FullInformationAboutUtilityFunctions" replaceString="false" />
    <defineVariable findString="$PRiskAversionRParameterValueMin" replaceString="0.0" />
    <defineVariable findString="$PRiskAversionRParameterValueMax" replaceString="8.0" />
    <defineVariable findString="$DRiskAversionRParameterValueMin" replaceString="0.0" />
    <defineVariable findString="$DRiskAversionRParameterValueMax" replaceString="8.0" />-->
    <!--<defineVariable findString="$RiskSelection" replaceString="PRiskAverseDNeutral" />
    <defineVariable findString="$RiskAversionLevel" replaceString="8.0" />-->
    <!--<defineVariable findString="$RiskSelection" replaceString="PLossAverseDNeutral" />-->
    <!--<defineVariable findString="$FullInformationAboutUtilityFunctions" replaceString="true" />-->
    <!--<defineVariable findString="$RiskSelection" replaceString="BothPartiesLossAverse" />-->
    <!--<defineVariable findString="$FullInformationAboutUtilityFunctions" replaceString="true" />-->
    
    <!-- DROP OR DEFAULT -->

    <defineVariable findString="$DropOrDefaultBasedOnProbabilityCutoffOnly" replaceString="false" /> <!--Selecting true here means that only a single probability estimate is used to make these decisions, and the decision is zero-dimensional, so no neural network is used-->

    <!--<defineVariable findString="$BeginningDropOrDefaultModule" replaceString="AbandonExtremes"/>-->
    <!--<defineVariable findString="$BeginningDropOrDefaultModule" replaceString="NeverGiveUp"/>-->
    <defineVariable findString="$BeginningDropOrDefaultModule" replaceString="DropOrDefaultChoice"/>

    <!--<defineVariable findString="$MidDropOrDefaultModule" replaceString="AbandonExtremes"/>-->
    <!--<defineVariable findString="$MidDropOrDefaultModule" replaceString="NeverGiveUp"/>-->
    <defineVariable findString="$MidDropOrDefaultModule" replaceString="DropOrDefaultChoice"/>

    <!--<defineVariable findString="$EndDropOrDefaultModule" replaceString="AbandonExtremes"/>-->
    <!--<defineVariable findString="$EndDropOrDefaultModule" replaceString="NeverGiveUp"/>-->
    <defineVariable findString="$EndDropOrDefaultModule" replaceString="DropOrDefaultChoice"/>

    <!-- ADJUSTMENTS OVERRIDE -->

    <defineVariable findString="$AdjustmentsModule1" replaceString="NoAdjustmentsModule"/>
    <defineVariable findString="$AdjustmentsModule2" replaceString="NoAdjustmentsModule"/>
    
    <!--<defineVariable findString="$AdjustmentsModule1" replaceString="SideBetAdjustmentsModule"/>
    <defineVariable findString="$PctOfDamagesClaimChallengedPartyWouldReceive" replaceString="1.0"/>
    <defineVariable findString="$PctOfDamagesChallengerWouldReceive" replaceString="0.9"/>
    <defineVariable findString="$DoubleChallengeCountsAsSingleChallenge" replaceString="false"/>-->
    
    <!-- NOTE: EnforceWhenCaseDroppedImmediatelyAfterward feature is not currently enabled -->
    <!--<defineVariable findString="$AdjustmentsModule2" replaceString="ShootoutAdjustmentsModule"/>
    <defineVariable findString="$DiscountFactorForShootouts" replaceString="1.0"/>
    <defineVariable findString="$MultiplierForShootouts" replaceString="0.50"/>
    <defineVariable findString="$EnforceWhenCaseDroppedImmediatelyAfterward" replaceString="false"/> 
    <defineVariable findString="$TrialExpensesMultiplierWithDoubleDamages" replaceString="2.0"/>-->
    
    <!-- BARGAINING AGGRESSIVENESS OVERRIDE -->

    
    <!--<defineVariable findString="$BargainingAggressivenessOverrideSetting1" replaceString="Skip"/>
    <defineVariable findString="$BargainingAggressivenessOverrideSetting2" replaceString="Skip"/>
    <defineVariable findString="$MisestimateOpponentsAggressivenessWhenOptimizing" replaceString="false"/>
    <defineVariable findString="$AssumedAggressivenessOfOpponent" replaceString="0.0"/>
    <defineVariable findString="$WeightOnAggressivenessAssumption" replaceString="0.0"/>-->
    
    <!--<defineVariable findString="$BargainingAggressivenessOverrideSetting1" replaceString="Skip"/>
    <defineVariable findString="$BargainingAggressivenessOverrideSetting2" replaceString="Symmetric"/>
    <defineVariable findString="$MisestimateOpponentsAggressivenessWhenOptimizing" replaceString="false"/>
    <defineVariable findString="$AssumedAggressivenessOfOpponent" replaceString="0.0"/>
    <defineVariable findString="$WeightOnAggressivenessAssumption" replaceString="0.0"/>-->

    
    <!--<defineVariable findString="$BargainingAggressivenessOverrideSetting1" replaceString="Skip"/>
    <defineVariable findString="$BargainingAggressivenessOverrideSetting2" replaceString="Separate"/>
    <defineVariable findString="$MisestimateOpponentsAggressivenessWhenOptimizing" replaceString="false"/>
    <defineVariable findString="$AssumedAggressivenessOfOpponent" replaceString="0.0"/>
    <defineVariable findString="$WeightOnAggressivenessAssumption" replaceString="0.0"/>
    <defineVariable findString="$BargainingAggressivenessFindEquilibriumUseComplexMethod" replaceString="false"/>
    <defineVariable findString="$BargainingAggressivenessFindEquilibriumUseSimpleMethod" replaceString="true"/>
    <defineVariable findString="$BargainingAggressivenessFindEquilibriumSimpleMethodRepetitions" replaceString="50"/>
    <defineVariable findString="$BargainingAggressivenessFindEquilibriumSimpleMethodUseFastConvergence" replaceString="true"/>
    <defineVariable findString="$BargainingAggressivenessFindEquilibriumSimpleMethodAbortFastConvergenceIfPreciseEnough" replaceString="false"/>
    <defineVariable findString="$BargainingAggressivenessFindEquilibriumSimpleMethodFastConvergencePrecision" replaceString="0.0025"/>
    <defineVariable findString="$BargainingAggressivenessFindEquilibriumSimpleMethodIterationsOverride" replaceString="15000"/>
    <defineVariable findString="$BargainingAggressivenessFindEquilibriumSimpleMethodCreateMovie" replaceString="false"/>-->
    
    <defineVariable findString="$BargainingAggressivenessOverrideSetting1" replaceString="Symmetric"/>
    <defineVariable findString="$BargainingAggressivenessOverrideSetting2" replaceString="Separate"/>
    <defineVariable findString="$MisestimateOpponentsAggressivenessWhenOptimizing" replaceString="false"/>
    <defineVariable findString="$AssumedAggressivenessOfOpponent" replaceString="0.0"/>
    <defineVariable findString="$WeightOnAggressivenessAssumption" replaceString="0.0"/>
    <defineVariable findString="$BargainingAggressivenessFindEquilibriumUseComplexMethod" replaceString="false"/>
    <defineVariable findString="$BargainingAggressivenessFindEquilibriumUseSimpleMethod" replaceString="false"/>
    <defineVariable findString="$BargainingAggressivenessFindEquilibriumSimpleMethodRepetitions" replaceString="1"/> <!--Do not set to 1 if UseSimpleMethod is true-->
    <defineVariable findString="$BargainingAggressivenessFindEquilibriumSimpleMethodUseFastConvergence" replaceString="false"/>
    <defineVariable findString="$BargainingAggressivenessFindEquilibriumSimpleMethodAbortFastConvergenceIfPreciseEnough" replaceString="false"/>
    <defineVariable findString="$BargainingAggressivenessFindEquilibriumSimpleMethodFastConvergencePrecision" replaceString="0.0025"/>
    <defineVariable findString="$BargainingAggressivenessFindEquilibriumSimpleMethodIterationsOverride" replaceString="15000"/>
    <defineVariable findString="$BargainingAggressivenessFindEquilibriumSimpleMethodCreateMovie" replaceString="false"/>
    <defineVariable findString="$AggressivenessContagion" replaceString="0.0"/>
    
    <!-- BARGAINING -->

    <defineVariable findString="$PartiesTakeIntoAccountPreviousOffer" replaceString="true" /> <!--option for all bargaining modules, this also affects whether combination decisions are evolved by SeparateEstimatesModule -->
    <defineVariable findString="$PartiesConsiderAccuracyOfOwnEstimates" replaceString="false" /> <!-- should be true only if we are running a model where thee is heterogeneous accuracy and players know how accurate they are-->
    <defineVariable findString="$ConsiderTasteForFairness" replaceString="false" />
    <defineVariable findString="$TasteForFairnessOnlySelfRegarding" replaceString="true" />
    <defineVariable findString="$PTasteForFairnessMin" replaceString="0.0" />
    <defineVariable findString="$PTasteForFairnessMax" replaceString="1.0" />
    <defineVariable findString="$DTasteForFairnessMin" replaceString="0.0" />
    <defineVariable findString="$DTasteForFairnessMax" replaceString="1.0" />
    <defineVariable findString="$PTasteForSettlementMin" replaceString="0.0" />
    <defineVariable findString="$PTasteForSettlementMax" replaceString="0.0" />
    <defineVariable findString="$DTasteForSettlementMin" replaceString="0.0" />
    <defineVariable findString="$DTasteForSettlementMax" replaceString="0.0" />
    <defineVariable findString="$PRegretAversionMin" replaceString="0.0" />
    <defineVariable findString="$PRegretAversionMax" replaceString="0.0" />
    <defineVariable findString="$DRegretAversionMin" replaceString="0.0" />
    <defineVariable findString="$DRegretAversionMax" replaceString="0.0" />
    <defineVariable findString="$RandomChangeToPOfferStdev" replaceString="0.0" />
    <defineVariable findString="$RandomChangeToDOfferStdev" replaceString="0.0" /> 
    
    <!--<defineVariable findString="$BargainingModule" replaceString="SimplisticBargaining"/>-->
    <!--<defineVariable findString="$BargainingModule" replaceString="FairBargaining"/>-->
    <!--<defineVariable findString="$BargainingModule" replaceString="NoBargainingBargaining" />-->
    <!--<defineVariable findString="$BargainingModule" replaceString="BargainingRangeBargaining" />-->
    <defineVariable findString="$BargainingModule" replaceString="UtilityRangeBargaining" /> <!-- See aggressiveness settings below -->
    <defineVariable findString="$MaxRepetitionsProjectionDecision" replaceString="99999" /> <!--Number of repetitions for projections to be optimized-->
    <defineVariable findString="$DivideBargainingIntoMinirounds" replaceString="false" />
    <defineVariable findString="$NumBargainingMinirounds" replaceString="5" />
    <defineVariable findString="$EvolvingRangeUncertaintySettings" replaceString="false" />
    <defineVariable findString="$RangeUncertaintyAggressivenessSmoothingPointsOverrideMin" replaceString="100" />
    <defineVariable findString="$RangeUncertaintyAggressivenessSmoothingPointsOverrideMax" replaceString="300" />
    <defineVariable findString="$RangeUncertaintyAggressivenessSmoothingPointsOverrideCurvature" replaceString="0.25" />
    <defineVariable findString="$RangeUncertaintyAggressivenessIterationsOverrideMin" replaceString="10,000" />
    <defineVariable findString="$RangeUncertaintyAggressivenessIterationsOverrideMax" replaceString="50,000" />
    <defineVariable findString="$RangeUncertaintyAggressivenessIterationsOverrideCurvature" replaceString="0.25" />
    <defineVariable findString="$ConstrainOffersBetween0And1" replaceString="true" />
    <defineVariable findString="$InterpretAggressivenessRelativeToOwnUncertainty" replaceString="true" />
    
    <!--<defineVariable findString="$BargainingModule" replaceString="OfferThresholdBargaining" />-->
    <!--<defineVariable findString="$BargainingModule" replaceString="SimultaneousOfferBargaining" />-->
    <defineVariable findString="$AddOptionToAcceptOthersOfferWhenNoOverlap" replaceString="true"/>
    <defineVariable findString="$ChanceLastMomentAcceptanceAllowed" replaceString="1.0"/>
    <!--<defineVariable findString="$BargainingModule" replaceString="SimultaneousOfferSymmetricBargaining" />-->

    <!-- The following are relevant for Preset bargaining aggressiveness only -->
    <!-- If that is the first module and second is not skip, then each of these is relevant only for optimizing OTHER player's strategy, so more anticipated aggressiveness yields more settlement  -->
    <!--Plaintiff-->
    <defineVariable findString="$PAggressivenessOverrideModifiedMin" replaceString="0.0" /> 
    <defineVariable findString="$PAggressivenessOverrideModifiedMax" replaceString="0.40" />
    <!--Defendant-->
    <defineVariable findString="$DAggressivenessOverrideModifiedMin" replaceString="0.0" />
    <defineVariable findString="$DAggressivenessOverrideModifiedMax" replaceString="0.40" />

    <defineVariable findString="$NegotiateSeparatelyOverProbabilityAndMagnitude" replaceString="false" />
    <defineVariable findString="$NegotiateProbabilityBeforeMagnitude" replaceString="true" />
    <defineVariable findString="$RejectLowProbabilitySettlements" replaceString="true" />
    <defineVariable findString="$RejectHighProbabilitySettlements" replaceString="true" />
    <defineVariable findString="$LowProbabilityThreshold" replaceString="0.4" />
    <defineVariable findString="$HighProbabilityThreshold" replaceString="0.6" />
    <defineVariable findString="$PartialSettlementEnforced" replaceString="true" />
    
    <!-- TRIAL -->

    <defineVariable findString="$JudgeNoiseLevelLiability" replaceString="0.20"/>
    <defineVariable findString="$UseBruteForceCalculationOfProbabilityPWins" replaceString="F"/>
    <defineVariable findString="$JudgeNoiseLevelDamages" replaceString="0.0"/>
    <defineVariable findString="$CaseResolvedBasedOnExogenouslySpecifiedProbability" replaceString="false"/> <!-- See also exogenous dispute generator option. If true, the BaseProbabilityPWins specified in the dispute generator controls; otherwise, judge makes estimate -->
    <defineVariable findString="$UseProportionalResultsWhenEvolvingEarlierDecisions" replaceString="false"/> <!-- Can only do this with risk-neutral, because it simply calculates proportional damages rather than utility -->
    <defineVariable findString="$TrialModule" replaceString="TrialStandardModule"/>
    <!--<defineVariable findString="$TrialModule" replaceString="TrialPerfectModule"/>--> <!-- consider also setting litigation costs to costless -->
  </parentSettingsFile>

  <parentSettingsFile filename="LitigationGameDefinitions.xml">
    <defineVariable findString="$BargainingClaimComponents" replaceString="1" />
    <defineVariable findString="$BargainingRepetitions" replaceString="1" />
    <defineVariable findString="$RangeUncertaintyAggressivenessIterations" replaceString="1" />
    <defineVariable findString="$RepetitionsOfAllModules" replaceString="1" />
  </parentSettingsFile>
  <parentSettingsFile filename="LitigationGameInputs.xml">
    <defineVariable findString="$PlayersActToMaximizeSocialWelfare" replaceString="false"/>
  </parentSettingsFile>
  <parentSettingsFile filename="LitigationGameEvolutionSettings.xml">
    <defineVariable findString="$NumPointsInCumulativeDistribution" replaceString="51" />
    <defineVariable findString="$NumGamePlaysForCumulativeDistribution" replaceString="100000" />
    <defineVariable findString="$ParallelOptimization" replaceString="true" /> <!--see also below-->
    <defineVariable findString="$StopParallelOptimizationAfterOptimizingNDecisions" replaceString="-1" />
    <defineVariable findString="$AverageInPreviousVersionsOfStrategy" replaceString="FALSE" />
    <defineVariable findString="$UseAlternatingAveraging" replaceString="FALSE" />
    <defineVariable findString="$StartAveragingInPreviousVersionsOfStrategyOnStepN" replaceString="3" />
    <defineVariable findString="$MinSmoothingPoints" replaceString="1000" />
    <defineVariable findString="$MaxSmoothingPoints" replaceString="1000" />
    <defineVariable findString="$MinIterations" replaceString="25,000" />
    <defineVariable findString="$MaxIterations" replaceString="25,000" />
    <defineVariable findString="$RepetitionsOfEntireSmoothingProcess" replaceString="1" />
    <defineVariable findString="$NumberPointsInCumulativeDistribution" replaceString="31" />
    <defineVariable findString="$SmoothingOptionSet" replaceString="GRNNSmoothingOptions" />
    <!--<defineVariable findString="$SmoothingOptionSet" replaceString="GRNNSmoothingOptionsFast" />-->
    <!--<defineVariable findString="$SmoothingOptionSet" replaceString="GRNNSmoothingOptionsFiveNeighbors" />-->
    <!--<defineVariable findString="$SmoothingOptionSet" replaceString="NearestNeighborSmoothingOptions" />-->
    <!--<defineVariable findString="$SmoothingOptionSet" replaceString="RPROPSmoothingOptions" />-->

    <defineVariable findString="$ChooseSmoothingPointsByClusteringLargerNumberOfPoints" replaceString="TRUE" />
    <defineVariable findString="$LargerNumberOfPointsFromWhichToClusterSmoothingPoints" replaceString="100000" />
    <defineVariable findString="$ChunkIterationsForRemoting" replaceString="FALSE" />
    <defineVariable findString="$RemotingCanSeparateFindingAndSmoothing" replaceString="FALSE" />
    <defineVariable findString="$UseWorkerRolesForRemoting" replaceString="FALSE" />
    <defineVariable findString="$ChunkSizeForRemoting" replaceString="100000" />
    <defineVariable findString="$SmoothingPointsMultiplierForEachInputAboveTwo" replaceString="1.5" />
    <defineVariable findString="$IterationsMultiplierForEachInputAboveTwo" replaceString="1.5" />
  </parentSettingsFile>
  <parentSettingsFile filename="LitigationGameReport.xml" >
  </parentSettingsFile>
  <parentSettingsFile filename="LitigationGameCommands.xml">
  <!--<parentSettingsFile filename="LitigationGameCommandsInterimReports.xml">-->
  <!--<parentSettingsFile filename="LitigationGameCommandsOneReport.xml">-->
    <defineVariable findString="$ParallelReporting" replaceString="true" />
    <defineVariable findString="$UseInitializeStrategiesFile" replaceString="F" />
    <defineVariable findString="$EvolveOnlyIfNecessary" replaceString="F" />
    <defineVariable findString="$ReportPrefix" replaceString="SingleRunReport" />
  </parentSettingsFile>
</ACESim>